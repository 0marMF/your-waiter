---
import ProfileLayout from "@/layouts/ProfileLayout.astro";
import DishesTable from "@/components/cj-gp/DishesTable";
import IngredientsTable from "@/components/cj-gp/IngredientsTable";
import type { Dish } from "@/schema/dish";
import { supabase } from "@/lib/supabase";
import type { Ingredient } from "@/schema/ingredient";

const TITLE = "GestiÃ³n de platillos e ingredientes"

let dishes: Dish[] = [];
let ingredients: Ingredient[] = [];

const getDishes = supabase
	.from("Platillo")
	.select("*");

const { data: dishesData, error: dishesError } = await getDishes;

if (dishesError) {
	Astro.locals.serverError = "Error al obtener platillo";
} else {
	dishes = dishesData.map(
		(dish) =>
			({
				id: dish.id_platillo,
				name: dish.txt_nombre,
				quantity: dish.nu_cantidad,
				price: dish.nu_precio,
			}) as Dish,
	);
}

const getIngredients = supabase
	.from("Ingrediente Extra")
	.select("*");

const { data: ingredientsData, error: ingredientsError } = await getIngredients;

if (ingredientsError) {
	Astro.locals.serverError = "Error al obtener platillo";
} else {
	ingredients = ingredientsData.map(
		(ingredient) =>
			({
				id: ingredient.id_ingrediente,
				name: ingredient.txt_nombre,
			}) as Ingredient,
	)	
}
---

<ProfileLayout title={TITLE}>
	<div class="flex flex-col gap-4 px-4">

		<h1 class="text-center text-5xl font-bold mt-8 mb-4">{TITLE}</h1>
		<h2 class="text-3xl font-semibold">Platillos</h2>
		<DishesTable client:idle initialDishes={dishes} />
		<h2 class="text-3xl font-semibold">Ingredientes extra</h2>
		<IngredientsTable client:idle initialIngredients={ingredients} />
		<div class="flex flex-row justify-end">
			<a href="/" class="btn btn-neutral">Regresar</a>
		</div>
	</div>
</ProfileLayout>
