---
import ProfileLayout from "@/layouts/ProfileLayout.astro"
import { CreateDishSchema, type CreateDish } from "@/schema/dish";
import { formatError, type FormErrors } from "@/util/format-error";

let errors: FormErrors<CreateDish> | undefined;

if(Astro.request.method === "POST"){
	const formData = await Astro.request.formData();
	const parsedData = CreateDishSchema.safeParse(Object.fromEntries(formData.entries()))

	if(parsedData.success){
		console.log(parsedData.data)
		return Astro.redirect("/manage-dishes");
	}else {
		errors = formatError(parsedData.error) as FormErrors<CreateDish>;
		console.log(errors)
	}

}
---
<ProfileLayout title="Registrar nuevo platillo">
	<h1 class="text-center text-5xl font-bold mt-8 mb-4">Registrar nuevo platillo</h1>
	<div class="container mx-auto">
		<form method="POST" action="/manage-dishes/add-dish" class="flex flex-col gap-4">
			<label class="form-control">
				<div class="label">
					<span class="label-text">Nombre del platillo *</span>
				</div>
				<input type="text" class="input input-bordered" name="name" />
				{errors?.name && ( 
					<div class="label">
						<span class="label-text-alt text-red-500">{errors.name}</span>
					</div>
				)}
			</label>

			<label class="form-control">
				<div class="label">
					<span class="label-text">Ingredientes Seleccionados</span>
				</div>
			</label>

			<label class="form-control">
				<div class="label">
					<span class="label-text">Cantidad de platillos que se pueden preparar*</span>
				</div>
				<input type="number" class="input input-bordered" placeholder="0" name="quantity">
				{errors?.quantity && ( 
					<div class="label">
						<span class="label-text-alt text-red-500">{errors.quantity}</span>
					</div>
				)}
			</label>

			<label class="form-control">
				<div class="label">
					<span class="label-text">Precio unitario del platillo *</span>
				</div>

				<div class="input input-bordered flex items-center gap-2">
					<svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-currency-dollar"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M16.7 8a3 3 0 0 0 -2.7 -2h-4a3 3 0 0 0 0 6h4a3 3 0 0 1 0 6h-4a3 3 0 0 1 -2.7 -2" /><path d="M12 3v3m0 12v3" /></svg>
					<input type="number" class="grow" placeholder="0" name="price">
				</div>


				{errors?.price && ( 
					<div class="label">
						<span class="label-text-alt text-red-500">{errors.price}</span>
					</div>
				)}
			</label>
			<div class="flex justify-end gap-2">
				<a href="/manage-dishes" class="btn btn-ghost">
					Cancelar
				</a>
				<button class="btn btn-primary"> Aceptar </button>
			</div>
		</form>


	</div>
</ProfileLayout>

